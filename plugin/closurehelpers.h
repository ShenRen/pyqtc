// This file is generated by closuregen.py.  Changes will be lost.

#define C_ARG(type, data) new ClosureArgument<type>(data)

Closure* NewClosure(QObject* sender, const char* signal, QObject* receiver, const char* slot);

template <typename T0>
Closure* NewClosure(QObject* sender, const char* signal, QObject* receiver, const char* slot, const T0& val0) {
  return new Closure(sender, signal, receiver, slot, C_ARG(T0, val0));
}

template <typename T0, typename T1>
Closure* NewClosure(QObject* sender, const char* signal, QObject* receiver, const char* slot, const T0& val0, const T1& val1) {
  return new Closure(sender, signal, receiver, slot, C_ARG(T0, val0), C_ARG(T1, val1));
}

template <typename T0, typename T1, typename T2>
Closure* NewClosure(QObject* sender, const char* signal, QObject* receiver, const char* slot, const T0& val0, const T1& val1, const T2& val2) {
  return new Closure(sender, signal, receiver, slot, C_ARG(T0, val0), C_ARG(T1, val1), C_ARG(T2, val2));
}

template <typename T0, typename T1, typename T2, typename T3>
Closure* NewClosure(QObject* sender, const char* signal, QObject* receiver, const char* slot, const T0& val0, const T1& val1, const T2& val2, const T3& val3) {
  return new Closure(sender, signal, receiver, slot, C_ARG(T0, val0), C_ARG(T1, val1), C_ARG(T2, val2), C_ARG(T3, val3));
}

template <typename T0, typename T1, typename T2, typename T3, typename T4>
Closure* NewClosure(QObject* sender, const char* signal, QObject* receiver, const char* slot, const T0& val0, const T1& val1, const T2& val2, const T3& val3, const T4& val4) {
  return new Closure(sender, signal, receiver, slot, C_ARG(T0, val0), C_ARG(T1, val1), C_ARG(T2, val2), C_ARG(T3, val3), C_ARG(T4, val4));
}

template <typename T0, typename T1, typename T2, typename T3, typename T4, typename T5>
Closure* NewClosure(QObject* sender, const char* signal, QObject* receiver, const char* slot, const T0& val0, const T1& val1, const T2& val2, const T3& val3, const T4& val4, const T5& val5) {
  return new Closure(sender, signal, receiver, slot, C_ARG(T0, val0), C_ARG(T1, val1), C_ARG(T2, val2), C_ARG(T3, val3), C_ARG(T4, val4), C_ARG(T5, val5));
}

template <typename T0, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
Closure* NewClosure(QObject* sender, const char* signal, QObject* receiver, const char* slot, const T0& val0, const T1& val1, const T2& val2, const T3& val3, const T4& val4, const T5& val5, const T6& val6) {
  return new Closure(sender, signal, receiver, slot, C_ARG(T0, val0), C_ARG(T1, val1), C_ARG(T2, val2), C_ARG(T3, val3), C_ARG(T4, val4), C_ARG(T5, val5), C_ARG(T6, val6));
}

template <typename T0, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7>
Closure* NewClosure(QObject* sender, const char* signal, QObject* receiver, const char* slot, const T0& val0, const T1& val1, const T2& val2, const T3& val3, const T4& val4, const T5& val5, const T6& val6, const T7& val7) {
  return new Closure(sender, signal, receiver, slot, C_ARG(T0, val0), C_ARG(T1, val1), C_ARG(T2, val2), C_ARG(T3, val3), C_ARG(T4, val4), C_ARG(T5, val5), C_ARG(T6, val6), C_ARG(T7, val7));
}

template <typename T0, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8>
Closure* NewClosure(QObject* sender, const char* signal, QObject* receiver, const char* slot, const T0& val0, const T1& val1, const T2& val2, const T3& val3, const T4& val4, const T5& val5, const T6& val6, const T7& val7, const T8& val8) {
  return new Closure(sender, signal, receiver, slot, C_ARG(T0, val0), C_ARG(T1, val1), C_ARG(T2, val2), C_ARG(T3, val3), C_ARG(T4, val4), C_ARG(T5, val5), C_ARG(T6, val6), C_ARG(T7, val7), C_ARG(T8, val8));
}

template <typename T0, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9>
Closure* NewClosure(QObject* sender, const char* signal, QObject* receiver, const char* slot, const T0& val0, const T1& val1, const T2& val2, const T3& val3, const T4& val4, const T5& val5, const T6& val6, const T7& val7, const T8& val8, const T9& val9) {
  return new Closure(sender, signal, receiver, slot, C_ARG(T0, val0), C_ARG(T1, val1), C_ARG(T2, val2), C_ARG(T3, val3), C_ARG(T4, val4), C_ARG(T5, val5), C_ARG(T6, val6), C_ARG(T7, val7), C_ARG(T8, val8), C_ARG(T9, val9));
}

#undef C_ARG

